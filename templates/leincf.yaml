AWSTemplateFormatVersion: 2010-09-09

Parameters:
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
  SSHLocation:
    Type: String
    AllowedPattern: \d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}/\d{1,2}
    Description: Ip address that is allowed to connect to instance
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  VpcId:
    Type: String
    Default: ""
    Description: If VpcId is not specified, the instance will be created in default VPC
  SubnetId:
    Type: String
    Default: ""
    Description: If SubnetId is not specified, the instance will be created in default Subnet
    
Conditions:
  IsDefaultVpc:
    Fn::Equals:
      - Ref: VpcId
      - ""
  IsDefaultSubnet:
    Fn::Equals:
      - Ref: SubnetId
      - ""

Resources:
  LeinInstance:
    Type: AWS::EC2::Instance
    Metadata: 
      AWS::CloudFormation::Init:
        config: 
          packages: 
            yum:
              java-1.8.0-openjdk: []
              emacs: []
              git: []
              tmux: []
          sources: 
            /home/ec2-user/.emacs.d: https://github.com/flyingmachine/emacs-for-clojure/tarball/master
          files:
            /home/ec2-user/bin/lein:
              source: https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                Fn::Sub: |
                  [cfn-auto-reloader-hook]
                  triggers=post.update
                  path=Resources.LeinInstance.Metadata.AWS::CloudFormation::Init
                  action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LeinInstance --region ${AWS::Region}
                  runas=root
              mode: "000400"
              owner: root
              group: root
          commands: 
            01_leiningen:
              command: >-
                echo $LEIN &&
                chown ec2-user:ec2-user $LEIN &&
                chmod a+x $LEIN
              env:
                LEIN: /home/ec2-user/bin/lein
            02_emacs:
              command: >-
                chown ec2-user:ec2-user -R /home/ec2-user/.emacs.d
              cwd: /home/ec2-user
            03_makeswap:
              command: >-
                sudo dd if=/dev/zero of=/swapfile bs=128M count=8 &&
                sudo chmod 600 /swapfile &&
                sudo mkswap /swapfile &&
                sudo swapon /swapfile &&
                echo "/swapfile swap swap defaults 0 0" >> /etc/fstab
    Properties:
      IamInstanceProfile:
        Ref: LeinInstanceProfile
      ImageId:
        Ref: LatestAmiId
      InstanceType: t3.micro
      KeyName:
        Ref: KeyPair
      SecurityGroupIds:
        - Ref: LeinSecurityGroup
      SubnetId:
        Fn::If:
          - IsDefaultSubnet
          - Ref: AWS::NoValue
          - Ref: SubnetId
      Tags:
        - Key: Name
          Value: lein-instance
        - Key: pjt
          Value: lein
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -x
            yum -y update
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LeinInstance --region ${AWS::Region}
        
  LeinSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for leiningen instance
      GroupName: lein-sg
      SecurityGroupIngress:
        - Description: Allow SSH to instance
          CidrIp:
            Ref: SSHLocation
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value: lein-sg
        - Key: pjt
          Value: lein
      VpcId:
        Fn::If:
          - IsDefaultVpc
          - Ref: AWS::NoValue
          - Ref: VpcId

  LeinInstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: 
        - Ref: LeinInstanceRole
        
  LeinInstanceRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /